/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package simulasi_uts;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import javax.swing.table.DefaultTableModel;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.List;
import java.io.InputStreamReader;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileSystemView;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Habtia Humaira
 */
public class Buku extends javax.swing.JFrame {

//    private static int masukkanData(Connection conn, String isbn, String judul, String tahun, String penerbit) throws SQLException {
//        String sql = "INSERT INTO Simulasi_UTS (isbn, judul, tahun, penerbit) VALUES (?, ?, ?, ?)";
//        try ( PreparedStatement ps = conn.prepareStatement(sql)) {
//            ps.setString(1, isbn);
//            ps.setString(2, judul);
//            ps.setString(3, tahun);
//            ps.setString(4, penerbit);
//            return ps.executeUpdate();
//        }
//    }
    private Connection conn;

    public void showTable() {
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("Simulasi_UTSPU");
        EntityManager em = emf.createEntityManager();

        try {
            // Buat model tabel dengan kolom yang sesuai
            DefaultTableModel tbnmhs = new DefaultTableModel(new String[]{"ISBN", "JUDUL", "TAHUN TERBIT", "PENERBIT"}, 0);

            // Menggunakan NamedQuery "Matakuliah.findAll" untuk mengambil semua data
            List<Bukuu> BukuuList = em.createNamedQuery("Bukuu.findAll", Bukuu.class).getResultList();

            // Iterasi hasil query dan tambahkan baris ke model tabel
            for (Bukuu buku : BukuuList) {
                tbnmhs.addRow(new Object[]{
                    buku.getIsbn(),
                    buku.getJudul(),
                    buku.getTahunTerbit(),
                    buku.getPenerbit()
                });
            }

            // Atur model tabel ke tabel GUI
            Tabel.setModel(tbnmhs);
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        } finally {
            em.close();  // Tutup EntityManager setelah selesai
        }
    }

    /**
     * Creates new form Buku
     */
    public Buku() {
        initComponents();
        showTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        Tabel = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfISBN = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tfJudul = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tfTahun = new javax.swing.JTextField();
        tfPenerbit = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();
        btnCetak = new javax.swing.JButton();
        btnUpload = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ISBN", "Judul", "Tahun Terbit", "Penerbit"
            }
        ));
        Tabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(Tabel);

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel1.setText("DATA BUKU");

        jLabel2.setText("ISBN");

        tfISBN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfISBNActionPerformed(evt);
            }
        });

        jLabel3.setText("Judul");

        tfJudul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfJudulActionPerformed(evt);
            }
        });

        jLabel4.setText("Tahun Terbit");

        tfTahun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTahunActionPerformed(evt);
            }
        });

        tfPenerbit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPenerbitActionPerformed(evt);
            }
        });

        jLabel5.setText("Penerbit");

        btnLogout.setText("Log Out");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        btnCetak.setText("Cetak");
        btnCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCetakActionPerformed(evt);
            }
        });

        btnUpload.setText("Upload");
        btnUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfJudul)
                    .addComponent(tfISBN)
                    .addComponent(tfPenerbit)
                    .addComponent(tfTahun)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAdd)
                        .addGap(27, 27, 27)
                        .addComponent(btnUpdate)
                        .addGap(26, 26, 26)
                        .addComponent(btnDelete))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCetak)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpload)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnLogout)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfISBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfJudul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfTahun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfPenerbit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCetak)
                    .addComponent(btnUpload)
                    .addComponent(btnLogout))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelMouseClicked
        // TODO add your handling code here:
        int row = Tabel.getSelectedRow();
        tfISBN.setText(Tabel.getValueAt(row, 0).toString());
        tfJudul.setText(Tabel.getValueAt(row, 1).toString());
        tfTahun.setText(Tabel.getValueAt(row, 2).toString());
        tfPenerbit.setText(Tabel.getValueAt(row, 3).toString());
    }//GEN-LAST:event_TabelMouseClicked

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        if (tfISBN.getText().equals("") || tfJudul.getText().equals("") || tfTahun.getText().equals("") || tfPenerbit.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Isi semua data");
        } else {
            String isbn, judul, tahun, penerbit;
            isbn = tfISBN.getText();
            judul = tfJudul.getText();
            tahun = tfTahun.getText();
            penerbit = tfPenerbit.getText();

            EntityManagerFactory emf = Persistence.createEntityManagerFactory("Simulasi_UTSPU");
            EntityManager em = emf.createEntityManager();
            em.getTransaction().begin();

            Bukuu bk = new Bukuu();
            bk.setIsbn(isbn);
            bk.setJudul(judul);
            bk.setTahunTerbit(tahun);
            bk.setPenerbit(penerbit);

            em.persist(bk);

            em.getTransaction().commit();
            JOptionPane.showMessageDialog(null, "Sukses diinput");

            bersih();
            showTable();

            em.close();
            emf.close();
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        if (tfISBN.getText().equals("") || tfJudul.getText().equals("") || tfTahun.getText().equals("") || tfPenerbit.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Isi semua data");
        } else {
            String isbn, judul, tahun, penerbit;
            isbn = tfISBN.getText();
            judul = tfJudul.getText();
            tahun = tfTahun.getText();
            penerbit = tfPenerbit.getText();

            EntityManagerFactory emf = Persistence.createEntityManagerFactory("Simulasi_UTSPU");
            EntityManager em = emf.createEntityManager();
            em.getTransaction().begin();

            Bukuu bk = em.find(Bukuu.class, isbn);
            if (bk == null) {
                JOptionPane.showMessageDialog(null, "Data tidak ditemukan");
            } else {
                bk.setIsbn(isbn);
                bk.setJudul(judul);
                bk.setTahunTerbit(tahun);
                bk.setPenerbit(penerbit);

                em.getTransaction().commit();
                JOptionPane.showMessageDialog(null, "Data berhasil diupdate");

                em.close();
                emf.close();
                bersih();
                tfISBN.setEditable(true);
            }
        }
        showTable();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("Simulasi_UTSPU");
        EntityManager em = emf.createEntityManager();

        try {
            // Validasi input
            if (tfISBN.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Masukkan ISBN yang akan dihapus");
            } else {
                // Mulai transaksi
                em.getTransaction().begin();

                // Cari entitas Matakuliah berdasarkan kode mata kuliah
                String ISBN = tfISBN.getText();
                Bukuu buku = em.find(Bukuu.class, ISBN);

                if (buku != null) {
                    // Hapus entitas jika ditemukan
                    em.remove(buku);

                    // Commit transaksi
                    em.getTransaction().commit();
                    JOptionPane.showMessageDialog(null, "Data berhasil dihapus");

                    // Refresh data pada tampilan
                    showTable();
                } else {
                    JOptionPane.showMessageDialog(null, "Data tidak ditemukan untuk ISBN: " + ISBN);
                    em.getTransaction().rollback();
                }
            }
        } catch (Exception e) {
            // Rollback transaksi jika terjadi kesalahan
            if (em.getTransaction().isActive()) {
                em.getTransaction().rollback();
            }
            JOptionPane.showMessageDialog(null, "Gagal menghapus data");
            System.out.println(e.getMessage());
        } finally {
            em.close();  // Tutup EntityManager setelah operasi
        }

// Kosongkan text field setelah penghapusan
        tfISBN.setText("");
        tfJudul.setText("");
        tfTahun.setText("");
        tfPenerbit.setText("");
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void bersih() {
        tfISBN.setText("");
        tfJudul.setText("");
        tfTahun.setText("");
        tfPenerbit.setText("");
    }

    private void tfISBNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfISBNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfISBNActionPerformed

    private void tfJudulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfJudulActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfJudulActionPerformed

    private void tfTahunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTahunActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfTahunActionPerformed

    private void tfPenerbitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPenerbitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfPenerbitActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
//        loginn y = new loginn();
//        y.setVisible(true);
//        this.dispose();
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCetakActionPerformed
        String driver = "org.postgresql.Driver";
        String koneksi = "jdbc:postgresql://localhost:5432/Simulasi_UTS";
        String user = "postgres";
        String password = "yupiburger";
        File reportFile = new File(".");
        String dirr = "";

        try {
            Class.forName(driver);
            Connection conn = DriverManager.getConnection(koneksi, user, password);
            Statement stat = conn.createStatement();
            String sql = "SELECT * FROM Bukuu";
            dirr = reportFile.getCanonicalPath() + "/src/simulasi_uts/";
            JasperDesign design = JRXmlLoader.load(dirr + "report1.jrxml");
            JasperReport jr = JasperCompileManager.compileReport(design);
            ResultSet rs = stat.executeQuery(sql);
            JRResultSetDataSource rsDataSource = new JRResultSetDataSource(rs);
            JasperPrint jp = JasperFillManager.fillReport(jr, new HashMap(),
                    rsDataSource);
            JasperViewer.viewReport(jp);
        } catch (ClassNotFoundException | SQLException | IOException | JRException ex) {
            JOptionPane.showMessageDialog(null, "\nGagal Mencetak\n" + ex,
                    "Kesalahan", JOptionPane.ERROR_MESSAGE);
        }

        //        try {
        //            conn = DriverManager.getConnection("jdbc:postgresql://localhost:5432/Mata_Kuliah", "postgres", "yupiburger");
        //
        //            JasperReport reports;
        //            String path = "\\PertemuanKeduabelas\\src\\pertemuankeduabelas\\report1.jrxml";
        //            reports = (JasperReport) JRLoader.loadObjectFromFile(path);
        //            JasperPrint print = JasperFillManager.fillReport(path, null, conn);
        //            JasperViewer view = new JasperViewer(print, false);
        //            view.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        //            view.setVisible(true);
        //        } catch (JRException e) {
        //            System.out.println(e.getMessage());
        //        } catch (SQLException ex) {
        //            Logger.getLogger(Mata_Kuliahh.class.getName()).log(Level.SEVERE, null, ex);
        //
        //        }
    }//GEN-LAST:event_btnCetakActionPerformed

    private void btnUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadActionPerformed

        JFileChooser jfc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        int returnValue = jfc.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File filePilihan = jfc.getSelectedFile();
            System.out.println("yang dipilih : " + filePilihan.getAbsolutePath());
            try {
                BufferedReader br = new BufferedReader(new FileReader(filePilihan));
                String baris;
                String pemisah = ",";

                // EntityManager untuk database
                EntityManagerFactory emf = Persistence.createEntityManagerFactory("Simulasi_UTSPU");
                EntityManager em = emf.createEntityManager();

                em.getTransaction().begin(); // Mulai transaksi

                while ((baris = br.readLine()) != null) {
                    String[] dataBuku = baris.split(pemisah);

                    if (dataBuku.length >= 4) {
                        String isbn = dataBuku[0];
                        String judul = dataBuku[1];
                        String tahun = dataBuku[2];
                        String penerbit = dataBuku[3];

                        // Buat objek MataKuliah baru
                        Bukuu bk = new Bukuu();
                        bk.setIsbn(isbn);
                        bk.setJudul(judul);
                        bk.setTahunTerbit(tahun);
                        bk.setPenerbit(penerbit);

                        // Simpan objek ke database
                        em.persist(bk);
                    }
                }

                em.getTransaction().commit(); // Commit transaksi
                em.close(); // Tutup EntityManager

                JOptionPane.showMessageDialog(this, "Data berhasil ditambahkan");
                showTable(); // Refresh tabel GUI

            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnUploadActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Buku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Buku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Buku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Buku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Buku().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Tabel;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCetak;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpload;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField tfISBN;
    private javax.swing.JTextField tfJudul;
    private javax.swing.JTextField tfPenerbit;
    private javax.swing.JTextField tfTahun;
    // End of variables declaration//GEN-END:variables
}
